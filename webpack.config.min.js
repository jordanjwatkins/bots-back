const path = require('path')
const webpack = require('webpack')
const HtmlWebpackPlugin = require('html-webpack-plugin')
const HtmlWebpackExcludeAssetsPlugin = require('html-webpack-exclude-assets-plugin')
const ExtractTextPlugin = require('extract-text-webpack-plugin')
const config = require('./webpack.config')

const projectTitle = require('./package.json').displayName

config.devtool = 'source-map'

config.output = {
  path: path.join(__dirname, 'build'),
  filename: '[name]-[hash].js',
}

config.entry = {
  app: './src/js/index.js',
  styles: './src/styles/app.css',
}

config.resolve = {
  alias: {
    './src': path.resolve(__dirname, 'src/'),
  },
}

config.module = {
  rules: [
    {
      test: /\.(gif|png|jpe?g)$/i,
      use: [{
        loader: 'file-loader',
        options: {
          name: '[name]-[hash].[ext]',
          outputPath: 'images/',
        },
      }],
    },

    {
      test: /\.(ogg|mp3|wav|mpe?g)$/i,
      use: [{
        loader: 'file-loader',
        options: {
          name: '[name]-[hash].[ext]',
          outputPath: 'sounds/',
        },
      }],
    },

    {
      test: /\.css$/,
      loader: ExtractTextPlugin.extract({
        fallback: 'style-loader',
        use: [
          {
            loader: 'css-loader',
            options: {
              importLoaders: 1,
              sourceMap: true,
              minimize: true,
            },
          },
          {
            loader: 'postcss-loader',
            options: {
              sourceMap: true,
            },
          },
        ],
      }),
    },

    {
      test: /\.js$/,
      exclude: /(node_modules|bower_components)/,
      loader: 'babel-loader',
      query: { presets: ['env'] },
    },
  ],
}

config.plugins = [
  new ExtractTextPlugin('[name]-[hash].min.css'),
  new webpack.optimize.UglifyJsPlugin({ sourceMap: true }),
  new HtmlWebpackPlugin({
    title: projectTitle,
    favicon: './favicon.ico',
    excludeAssets: [/styles-.*.js/],
  }),
  new HtmlWebpackExcludeAssetsPlugin(),
]

module.exports = config
